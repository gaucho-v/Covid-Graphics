{"version":3,"sources":["components/UI/Loader/Loader.js","components/Recharts/Recharts.tsx","components/Graphic/Graphic.js","components/Main/index.js","components/Main/Main.js","components/Search/Search.js","components/App.js","contants.js","index.tsx"],"names":["Loader","className","SimpleLineChart","placeDaysWeeks","placeData","map","el","date","slice","width","height","data","dataKey","strokeDasharray","type","stroke","r","Graphic","this","props","placeName","isUpdate","statistics","index","RelativeForGraphics","key","Name","LastStatistic","currentData","length","prevData","beforePrevData","properties","prop","Logic","PureComponent","styled","div","h4","Main","cities","Graphics","place","citiesData","find","en","toUpperCase","window","onscroll","header","document","getElementById","pageYOffset","classList","add","remove","Search","search","changeInput","addPlace","SearchGroup","id","value","onChange","onClick","App","state","handleChangeInput","target","setState","handleAddPlace","indexOf","message","info","addEventListener","console","log","axios","get","then","dataString","jsn","substring","JSON","parse","countries","catch","f","Container","GlobalStyle","confirmed","currentDate","CurrentDate","Component","createGlobalStyle","h2","ReactDOM","render"],"mappings":"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","file":"static/js/main.a226f1d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Loader.css'\r\n\r\nconst Loader = () => (\r\n  <div className='loader'>\r\n    <h3>Пожалуйста, подождите...</h3>\r\n    <div className=\"lds-spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader","import React from 'react'\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\r\n\r\n\r\n\r\nconst SimpleLineChart = ({placeData} : any)  => {\r\n    const placeDaysWeeks = placeData.map((el: any) => ({\r\n        ...el,\r\n        date: el.date.slice(5,10)\r\n    }));\r\n    return (\r\n    <LineChart width={450} height={240} data={placeDaysWeeks}>\r\n      <XAxis dataKey='date'/>\r\n      <YAxis width={75}/>\r\n      <CartesianGrid strokeDasharray=\"0.5 1\"/>\r\n      <Tooltip/>\r\n      <Line type=\"monotone\" dataKey=\"confirmed\" stroke=\"red\" r={1}/>\r\n      <Line type=\"monotone\" dataKey=\"cured\" stroke=\"#82ca9d\" r={1}/>\r\n      <Line type=\"monotone\" dataKey=\"deaths\" stroke=\"black\"  r={1} />\r\n    </LineChart>\r\n  )\r\n};\r\n\r\nexport default SimpleLineChart;","import React, {PureComponent} from 'react'\r\nimport * as Logic from \"../Main\";\r\nimport SimpleLineChart from \"../Recharts/Recharts\";\r\nimport styled from \"styled-components\";\r\n\r\nclass Graphic extends PureComponent {\r\n  render() {\r\n    const {placeName, isUpdate,statistics, index} = this.props;\r\n    return (\r\n      <RelativeForGraphics key={`${index}.${placeName}`}>\r\n        <Name> {placeName} </Name>\r\n        <LastStatistic>\r\n          <p>Last data:</p>\r\n          {Logic.showLastData(isUpdate,statistics)}\r\n        </LastStatistic>\r\n        <SimpleLineChart\r\n          placeData={statistics}/>\r\n      </RelativeForGraphics>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Graphic\r\n\r\nconst RelativeForGraphics = styled.div`\r\n  position: relative;\r\n`;\r\nconst LastStatistic = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    background: cornsilk;\r\n    top: 24%;\r\n    left: 20%;\r\n    flex-direction: column;\r\n    padding: 5px;\r\n    border: 2px solid #eee;\r\n    border-radius: 7px;\r\n    color: #b5bbbb;\r\n    \r\n`;\r\nconst Name = styled.h4`\r\n  text-align: center;\r\n  color: #808088;\r\n`;","import React from \"react\";\r\n\r\nexport const showLastData = (isUpdate,statistics) => {\r\n  const currentData = statistics[statistics.length-1];\r\n  const prevData= statistics[statistics.length-2];\r\n  const beforePrevData = statistics[statistics.length-3];\r\n  const properties = ['confirmed', 'cured', 'deaths'];\r\n  if (isUpdate) {\r\n    return (\r\n      <div>\r\n        {properties.map((prop,index) => (\r\n          <div key={`${index}.${prop}`}>{currentData[prop] - prevData[prop]} {prop}</div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div>\r\n        {properties.map((prop,index) => (\r\n          <div key={`${index}.${prop}`}> {prevData[prop] - beforePrevData[prop]} {prop}</div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport const checkPlaceWithoutTranslitInName = (place) => {\r\n  let placeName = place.toUpperCase();\r\n  if (place === 'Белгородская область') {\r\n    return placeName = 'BELGOROD'\r\n  }\r\n  if (place === 'Калининградская область') {\r\n    return placeName = '(NEW) KALININGRAD'\r\n  }\r\n  return placeName\r\n};\r\n\r\n","import React, {PureComponent} from 'react'\r\nimport styled from \"styled-components\";\r\nimport * as Logic from  \"./index\";\r\nimport Graphic from \"../Graphic/Graphic\";\r\n\r\n\r\nclass Main extends PureComponent {\r\n   render () {\r\n     const {data, cities, isUpdate} = this.props;\r\n     return (\r\n       <Graphics>\r\n         {cities.map((place, index) => {\r\n           const citiesData = data.find(el => el.en.toUpperCase() === place.toUpperCase());\r\n           if (!citiesData) {\r\n             return null\r\n           }\r\n           const {statistics} = citiesData;\r\n           const placeName = Logic.checkPlaceWithoutTranslitInName(place);\r\n           return (\r\n             <Graphic key={index + place} statistics={statistics} placeName={placeName} isUpdate={isUpdate} index={index}/>\r\n           )\r\n         })\r\n         }\r\n       </Graphics>\r\n     )\r\n   }\r\n}\r\n\r\nexport default Main\r\n\r\n\r\nconst Graphics = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\n\r\n","import React from 'react'\r\nimport {Button, Input} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport './Search.css'\r\n\r\n\r\nwindow.onscroll = function showHeader() {\r\n  const header = document.getElementById('header')\r\n  if (window.pageYOffset > 52) {\r\n    header.classList.add('header-fixed')\r\n  }\r\n  else {\r\n    header.classList.remove('header-fixed')\r\n  }\r\n};\r\n\r\nconst Search = ({search,changeInput,addPlace}) => {\r\n  return (\r\n    <SearchGroup id='header'>\r\n      <Input value={search} onChange={changeInput}></Input>\r\n      <Button type=\"primary\" onClick={addPlace}>Add place</Button>\r\n    </SearchGroup>\r\n  )\r\n};\r\n\r\nexport default Search\r\n\r\nconst SearchGroup = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n`;\r\n","import React, {Component} from 'react';\r\nimport styled, {createGlobalStyle} from 'styled-components';\r\nimport axios from 'axios'\r\nimport Loader from \"./UI/Loader/Loader\";\r\nimport Main from './Main/Main'\r\nimport {API_URL} from '../contants'\r\nimport Search from \"./Search/Search\";\r\nimport {message} from \"antd\";\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data: [],\r\n        cities: ['Russia','Moscow','Saint Petersburg','Voronezh region','Белгородская область', 'Калининградская область','Ukraine', 'Belarus', 'USA'],\r\n        search: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"optimizedResize\", function() {\r\n            console.log(\"Resource conscious resize callback!\");\r\n        });\r\n        axios.get(API_URL).then(({data: dataString}) => {\r\n            const jsn = dataString.substring(dataString.indexOf('{'));\r\n            const data = JSON.parse(jsn);\r\n\r\n            this.setState({\r\n                data: [...data.cities.data.cities, data.countries.data.countries.find((el) => el.en === 'Russia')],\r\n            });\r\n        }).catch(f => f)\r\n    }\r\n\r\n    handleChangeInput = ({target: {value}}) => {\r\n         this.setState({\r\n             search: value\r\n        })\r\n    };\r\n\r\n    handleAddPlace = () => {\r\n        const listNamesPlaces = this.state.data.map((el) => el.en.toUpperCase());\r\n        const index = listNamesPlaces.indexOf(this.state.search.toUpperCase());\r\n        if(index >= 0) {\r\n            message.info('Такое место есть');\r\n\r\n            this.setState({\r\n                cities: [this.state.search, ...this.state.cities]\r\n            });\r\n        }\r\n        else {\r\n            message.info('Неправильно введен город');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {data,search,cities} = this.state;\r\n        const {statistics} = data[0] || {};\r\n        if (!statistics) {\r\n            return (\r\n              <Container>\r\n                  <GlobalStyle/>\r\n                  <Loader/>\r\n              </Container>\r\n            )\r\n        }\r\n        const isUpdate = statistics[statistics.length-1].confirmed - statistics[statistics.length-2].confirmed;\r\n        const currentDate = statistics[statistics.length-1].date.slice(5,10);\r\n        return (\r\n            <Container>\r\n                <GlobalStyle/>\r\n                <Search search={search} addPlace={this.handleAddPlace} changeInput={this.handleChangeInput}/>\r\n                {!isUpdate ?  <CurrentDate>Данных за {currentDate} ещё нет</CurrentDate> : null}\r\n                <Main data={data} cities={cities} isUpdate={isUpdate}/>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Inconsolata&display=swap\");\r\n  body {\r\n    background-color: #eee;\r\n    font-family: 'Inconsolata', monospace;\r\n    height: auto;\r\n    @media (max-width: 1024px) {\r\n      background: none;\r\n    }\r\n  };\r\n`;\r\nconst Container = styled.div`\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  border: 2px solid #eee;\r\n  border-radius: 7px;\r\n  background-color: white;\r\n  @media (max-width: 1024px) {\r\n        width: 100%;\r\n        border: none;\r\n        padding: 0;\r\n    }\r\n`;\r\nconst CurrentDate = styled.h2`\r\n  text-align: center;\r\n  color: darkred;\r\n  text-transform: uppercase;\r\n`;\r\n\r\n\r\n","export const API_URL = 'https://cors-anywhere.herokuapp.com/coronavirus-monitor.ru/jquery-lite-9.js?a=12';","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/App\";\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}