{"version":3,"sources":["components/UI/Loader/Loader.js","components/Recharts/Recharts.js","components/Graphic/Graphic.js","components/Graphic/index.js","components/Main/Main.js","components/CitiesList/CitiesList.js","components/Search/Search.js","components/App.js","contants.js","index.tsx"],"names":["Loader","className","SimpleLineChart","placeData","useState","width","changeWidth","height","changeHeight","placeDaysWeeks","map","el","date","slice","window","addEventListener","screen","console","log","data","dataKey","strokeDasharray","type","stroke","r","Graphic","this","props","placeName","isUpdate","statistics","index","RelativeForGraphics","key","Name","LastStatistic","currentData","length","prevData","beforePrevData","properties","prop","Logic","PureComponent","styled","div","h4","Main","cities","Graphics","place","citiesData","find","ru","toUpperCase","CitiesList","listCitiesForRussia","onCloseCitiesList","title","visible","onOk","onCancel","sort","onscroll","header","document","getElementById","pageYOffset","classList","add","remove","Search","search","changeInput","addPlace","showCitiesList","SearchGroup","id","onClick","value","onChange","icon","SearchOutlined","App","state","handleChangeInput","target","setState","handleAddPlace","indexOf","message","info","error","handleShowCitiesList","filter","country","handleCloseCitiesList","axios","get","then","dataString","jsn","substring","JSON","parse","countries","catch","f","Container","GlobalStyle","confirmed","currentDate","CurrentDate","Component","createGlobalStyle","h2","ReactDOM","render"],"mappings":"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","file":"static/js/main.58673eee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Loader.css'\r\n\r\nconst Loader = () => (\r\n  <div className='loader'>\r\n    <h3>Пожалуйста, подождите...</h3>\r\n    <div className=\"lds-spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader","import React, {useState} from 'react'\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts';\r\n\r\n\r\n\r\nconst SimpleLineChart = ({placeData})  => {\r\n    const [width, changeWidth] = useState(450);\r\n    const [height, changeHeight] = useState(240);\r\n\r\n    const placeDaysWeeks = placeData.map((el) => ({\r\n        ...el,\r\n        date: el.date.slice(5,10)\r\n    }));\r\n\r\n\r\n    window.addEventListener(\"resize\", function() {\r\n      if (window.screen.width < 1024 ) {\r\n        changeWidth(window.screen.width);\r\n        changeHeight(300);\r\n        console.log(width,height);\r\n      }\r\n      else {\r\n        changeWidth(450);\r\n        changeHeight(240);\r\n      }\r\n  });\r\n    return (\r\n    <LineChart width={width} height={height} data={placeDaysWeeks}>\r\n      <XAxis dataKey='date'/>\r\n      <YAxis width={75}/>\r\n      <CartesianGrid strokeDasharray=\"0.5 1\"/>\r\n      <Tooltip/>\r\n      <Line type=\"monotone\" dataKey=\"confirmed\" stroke=\"red\" r={1}/>\r\n      <Line type=\"monotone\" dataKey=\"cured\" stroke=\"#82ca9d\" r={1}/>\r\n      <Line type=\"monotone\" dataKey=\"deaths\" stroke=\"black\"  r={1} />\r\n    </LineChart>\r\n  )\r\n};\r\n\r\nexport default SimpleLineChart;","import React, {PureComponent} from 'react'\r\nimport * as Logic from \"../Graphic/index\";\r\nimport SimpleLineChart from \"../../components/Recharts/Recharts\"\r\nimport styled from \"styled-components\";\r\n\r\nclass Graphic extends PureComponent {\r\n  render() {\r\n    const {placeName, isUpdate,statistics, index} = this.props;\r\n    return (\r\n      <RelativeForGraphics key={`${index}.${placeName}`}>\r\n        <Name> {placeName} </Name>\r\n        <LastStatistic>\r\n          Сегодня:\r\n          {Logic.showLastData(isUpdate,statistics)}\r\n        </LastStatistic>\r\n        <SimpleLineChart\r\n          placeData={statistics}/>\r\n      </RelativeForGraphics>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Graphic\r\n\r\nconst RelativeForGraphics = styled.div`\r\n  position: relative;\r\n`;\r\nconst LastStatistic = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    background: cornsilk;\r\n    top: 24%;\r\n    left: 20%;\r\n    flex-direction: column;\r\n    padding: 5px;\r\n    border: 2px solid #eee;\r\n    border-radius: 7px;\r\n    color: #b5bbbb;\r\n    \r\n`;\r\nconst Name = styled.h4`\r\n  text-align: center;\r\n  color: #808088;\r\n`;","import React from \"react\";\r\n\r\nexport const showLastData = (isUpdate,statistics) => {\r\n  const currentData = statistics[statistics.length-1];\r\n  const prevData= statistics[statistics.length-2];\r\n  const beforePrevData = statistics[statistics.length-3];\r\n  const properties = ['confirmed', 'cured', 'deaths'];\r\n  if (isUpdate) {\r\n    return (\r\n      <div>\r\n        {properties.map((prop,index) => (\r\n          <div key={`${index}.${prop}`}>{currentData[prop] - prevData[prop]} {prop}</div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div>\r\n        {properties.map((prop,index) => (\r\n          <div key={`${index}.${prop}`}> {prevData[prop] - beforePrevData[prop]} {prop}</div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n","import React, {PureComponent} from 'react'\r\nimport styled from \"styled-components\";\r\nimport Graphic from \"../Graphic/Graphic\";\r\n\r\n\r\nclass Main extends PureComponent {\r\n   render () {\r\n     const {data, cities, isUpdate} = this.props;\r\n     return (\r\n       <Graphics>\r\n         {cities.map((place, index) => {\r\n           const citiesData = data.find(el => el.ru.toUpperCase() === place.toUpperCase());\r\n           if (!citiesData) {\r\n             return null\r\n           }\r\n           const {statistics} = citiesData;\r\n           const placeName = place.toUpperCase();\r\n           return (\r\n             <Graphic key={index + place} statistics={statistics} placeName={placeName} isUpdate={isUpdate} index={index}/>\r\n           )\r\n         })\r\n         }\r\n       </Graphics>\r\n     )\r\n   }\r\n}\r\n\r\nexport default Main\r\n\r\n\r\nconst Graphics = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\n\r\n","import React from 'react'\r\nimport { Modal } from 'antd';\r\n\r\nconst CitiesList = ({listCitiesForRussia,onCloseCitiesList}) => {\r\n  return (\r\n      <Modal\r\n        title=\"Список городов и областей для поиска\"\r\n        visible={!!listCitiesForRussia}\r\n        onOk = {onCloseCitiesList}\r\n        onCancel = {onCloseCitiesList}\r\n      >\r\n        {listCitiesForRussia && listCitiesForRussia.sort().map((el) => `${el} `)}\r\n      </Modal>\r\n  );\r\n};\r\n\r\nexport default CitiesList\r\n\r\n","import React from 'react'\r\nimport {Button, Input, Tooltip} from \"antd\";\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport styled from \"styled-components\";\r\nimport './Search.css'\r\nimport CitiesList from \"../CitiesList/CitiesList\";\r\n\r\n\r\nwindow.onscroll = function showHeader() {\r\n  const header = document.getElementById('header')\r\n  if (window.pageYOffset > 52) {\r\n    header.classList.add('header-fixed')\r\n  }\r\n  else {\r\n    header.classList.remove('header-fixed')\r\n  }\r\n};\r\n\r\nconst Search = ({search,changeInput,addPlace,showCitiesList,listCitiesForRussia,onCloseCitiesList}) => {\r\n  return (\r\n    <SearchGroup id='header'>\r\n      <Button type=\"primary\" onClick={showCitiesList}>Список городов России</Button>\r\n      <Input value={search} onChange={changeInput}></Input>\r\n      <Tooltip title=\"search\">\r\n        <Button type=\"primary\" icon={<SearchOutlined />} onClick={addPlace}>Поиск</Button>\r\n      </Tooltip>\r\n      <CitiesList listCitiesForRussia={listCitiesForRussia} onCloseCitiesList={onCloseCitiesList}/>\r\n    </SearchGroup>\r\n  )\r\n};\r\n\r\nexport default Search\r\n\r\nconst SearchGroup = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n`;\r\n","import React, {Component} from 'react';\r\nimport styled, {createGlobalStyle} from 'styled-components';\r\nimport axios from 'axios'\r\nimport Loader from \"./UI/Loader/Loader\";\r\nimport Main from './Main/Main'\r\nimport {API_URL} from '../contants'\r\nimport Search from \"./Search/Search\";\r\nimport {message} from \"antd\";\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data: [],\r\n        cities: ['Россия','Москва','Санкт-Петербург','Воронежский регион','Белгородская область', 'Калининградская область','Украина', 'Беларусь', 'США'],\r\n        search: '',\r\n        listCitiesForRussia: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get(API_URL).then(({data: dataString}) => {\r\n            const jsn = dataString.substring(dataString.indexOf('{'));\r\n            const data = JSON.parse(jsn);\r\n\r\n            this.setState({\r\n                data: [...data.cities.data.cities, data.countries.data.countries.find((el) => el.ru === 'Россия')],\r\n            });\r\n        }).catch(f => f)\r\n    }\r\n\r\n    handleChangeInput = ({target: {value}}) => {\r\n         this.setState({\r\n             search: value\r\n        })\r\n    };\r\n\r\n    handleAddPlace = () => {\r\n        const listNamesPlaces = this.state.data.map((el) => el.ru.toUpperCase());\r\n        const index = listNamesPlaces.indexOf(this.state.search.toUpperCase());\r\n        if(index >= 0) {\r\n            message.info('Такое место есть');\r\n\r\n            this.setState({\r\n                cities: [...this.state.cities,this.state.search],\r\n                search: ''\r\n            });\r\n        }\r\n        else {\r\n            message.error('Неправильно введен город');\r\n        }\r\n    };\r\n\r\n    handleShowCitiesList = () => {\r\n        const {data} = this.state\r\n        const cities = data.filter((el) => el.country === 'Россия').map((el) => el.ru);\r\n        this.setState({\r\n            listCitiesForRussia: cities\r\n        })\r\n    };\r\n    handleCloseCitiesList = () => {\r\n        this.setState({\r\n            listCitiesForRussia: null\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const {data,search,cities,listCitiesForRussia} = this.state;\r\n        const {statistics} = data[0] || {};\r\n        if (!statistics) {\r\n            return (\r\n              <Container>\r\n                  <GlobalStyle/>\r\n                  <Loader/>\r\n              </Container>\r\n            )\r\n        }\r\n        const isUpdate = statistics[statistics.length-1].confirmed - statistics[statistics.length-2].confirmed;\r\n        const currentDate = statistics[statistics.length-1].date.slice(5,10);\r\n        return (\r\n            <Container>\r\n                <GlobalStyle/>\r\n                <Search search={search} addPlace={this.handleAddPlace}\r\n                        changeInput={this.handleChangeInput}\r\n                        showCitiesList={this.handleShowCitiesList}\r\n                        listCitiesForRussia={listCitiesForRussia}\r\n                        onCloseCitiesList={this.handleCloseCitiesList}\r\n                />\r\n                {!isUpdate ?  <CurrentDate>Данных за {currentDate} ещё нет</CurrentDate> : null}\r\n                <Main data={data} cities={cities} isUpdate={isUpdate}/>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url(\"https://fonts.googleapis.com/css?family=Inconsolata&display=swap\");\r\n  body {\r\n    background-color: #eee;\r\n    font-family: 'Inconsolata', monospace;\r\n    height: auto;\r\n    @media (max-width: 1024px) {\r\n      background: none;\r\n    }\r\n  };\r\n`;\r\nconst Container = styled.div`\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  border: 2px solid #eee;\r\n  border-radius: 7px;\r\n  background-color: white;\r\n  @media (max-width: 1024px) {\r\n        width: 100%;\r\n        border: none;\r\n        padding: 0;\r\n    }\r\n`;\r\nconst CurrentDate = styled.h2`\r\n  text-align: center;\r\n  color: darkred;\r\n  text-transform: uppercase;\r\n`;\r\n\r\n\r\n","export const API_URL = 'https://cors-anywhere.herokuapp.com/coronavirus-monitor.ru/jquery-lite-9.js?a=12';","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/App\";\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}